# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-07-04 00:30
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_text', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Alternativa',
                'verbose_name_plural': 'Alternativas',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200)),
                ('acronym', models.CharField(blank=True, max_length=10, verbose_name=b'Sigla')),
            ],
            options={
                'verbose_name': 'Projeto',
                'verbose_name_plural': 'Projetos',
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name=b'T\xc3\xadtulo')),
                ('pub_date', models.DateField(verbose_name=b'Data de publica\xc3\xa7\xc3\xa3o')),
            ],
            options={
                'ordering': ('pub_date',),
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('first_name', models.CharField(blank=True, max_length=40, verbose_name=b'Nome')),
                ('last_name', models.CharField(blank=True, max_length=100, verbose_name=b'Sobrenome')),
                ('staff', models.CharField(blank=True, choices=[(b'1', b'Professor'), (b'2', b'Funcionario'), (b'3', b'Aluno-Graduacao'), (b'4', b'Aluno-Mestrado'), (b'5', b'Aluno-Doutorado'), (b'6', b'Aluno-Especial'), (b'7', b'Aluno-Lato'), (b'8', b'Outro')], max_length=1, verbose_name=b'Staff')),
                ('institute', models.CharField(blank=True, default=b'instituto', max_length=40, verbose_name=b'Instituto')),
                ('academic_registry', models.IntegerField(default=b'9999', verbose_name=b'Registro acad\xc3\xaamico')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name=b'Email')),
                ('nickname', models.CharField(blank=True, max_length=40, null=True, verbose_name=b'Apelido')),
            ],
            options={
                'verbose_name': 'Usu\xe1rio',
                'verbose_name_plural': 'Usu\xe1rios',
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected_choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.Choice')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.User')),
            ],
            options={
                'verbose_name': 'Voto',
                'verbose_name_plural': 'Votos',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('publication_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainapp.Publication')),
                ('source', models.CharField(blank=True, default=b'', max_length=200)),
            ],
            options={
                'verbose_name': 'Artigo',
                'verbose_name_plural': 'Artigos',
            },
            bases=('mainapp.publication',),
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('publication_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainapp.Publication')),
            ],
            options={
                'verbose_name': 'Quest\xe3o',
                'verbose_name_plural': 'Quest\xf5es',
            },
            bases=('mainapp.publication',),
        ),
        migrations.AddField(
            model_name='publication',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.User', verbose_name=b'Autor'),
        ),
        migrations.AddField(
            model_name='publication',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.Project', verbose_name=b'Projeto'),
        ),
        migrations.AddField(
            model_name='publication',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='ChoiceQuestion',
            fields=[
                ('question_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainapp.Question')),
                ('question_text', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Quest\xe3o',
                'verbose_name_plural': 'Quest\xf5es',
            },
            bases=('mainapp.question',),
        ),
        migrations.AddField(
            model_name='vote',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.ChoiceQuestion'),
        ),
        migrations.AddField(
            model_name='choice',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.ChoiceQuestion'),
        ),
        migrations.AlterUniqueTogether(
            name='vote',
            unique_together=set([('question', 'user')]),
        ),
    ]
